{
	"info": {
		"_postman_id": "4c597102-24f5-41c4-9831-237125adff4b",
		"name": "Booking_Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34981174"
	},
	"item": [
		{
			"name": "Token Generation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data=pm.response.json()\r",
							"pm.environment.set(\"aceesstoken\",data.token)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create booking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName=pm.variables.replaceIn('{{$randomFirstName}}')\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"firstName\",firstName)\r",
							"\r",
							"var LastName=pm.variables.replaceIn('{{$randomLastName}}')\r",
							"console.log(LastName)\r",
							"pm.environment.set(\"LastName\",LastName)\r",
							"\r",
							"var number=Math.floor(Math.random() * 90) + 10;\r",
							"var totalprice =pm.variables.replaceIn(number)\r",
							"\r",
							"console.log(totalprice)\r",
							"pm.environment.set(\"totalprice\",totalprice)\r",
							"const arr = [\"true\",\"false\"];\r",
							"const randomElement = arr[Math.floor(Math.random() * arr.length)];\r",
							"var depositpaid =pm.variables.replaceIn(randomElement)\r",
							"console.log(depositpaid)\r",
							"pm.environment.set(\"depositpaid\",depositpaid)\r",
							"\r",
							"//var time=pm.variables.replaceIn('{{$randomDateFuture}}')\r",
							"//console.log(time)\r",
							"const moment =require('moment')\r",
							"const today = moment()\r",
							"//console.log(today.add(5,'d').format(\"YYYY-MM-DD\"))//add 5 day to current day\r",
							"//console.log(today.subtract(5,'d').format(\"YYYY-MM-DD\"))//subtract 5 days to current day\r",
							"var checkIn= today.format(\"YYYY-MM-DD\")\r",
							"pm.environment.set('checkIn',checkIn)\r",
							"\r",
							"var checkOut= today.format(\"YYYY-MM-DD\")\r",
							"pm.environment.set('checkOut',checkOut)\r",
							"\r",
							"var additionalneed=pm.variables.replaceIn('{{$randomProduct}}')\r",
							"console.log(additionalneed)\r",
							"pm.environment.set(\"additionalneed\",additionalneed)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData=pm.response.json()",
							"pm.environment.set(\"id\",jsonData.bookingid)",
							"",
							"pm.test('Verify status code',function(){",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test('first name validation',function(){",
							"    pm.expect(jsonData.booking.firstname).to.eql(pm.environment.get('firstName'))",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test('last name validation',function(){",
							"    pm.expect(jsonData.booking.lastname).to.eql(pm.environment.get('LastName'))",
							"})",
							"",
							"pm.test('price validation',function(){",
							"    pm.expect(jsonData.booking.totalprice).to.eql(parseInt(pm.environment.get('totalprice')))",
							"    ",
							"})",
							"",
							"pm.test('depositpaid validation',function(){",
							"    console.log(jsonData.booking.depositpaid)",
							"    console.log(pm.environment.get('depositpaid'))",
							"    pm.expect(jsonData.booking.depositpaid).to.eql(JSON.parse(pm.environment.get('depositpaid')))",
							"})",
							"",
							"pm.test('checkIn validation',function(){",
							"    pm.expect(jsonData.booking.bookingdates.checkin).to.eql(pm.environment.get('checkIn'))",
							"})",
							"",
							"pm.test('checkOut validation',function(){",
							"    pm.expect(jsonData.booking.bookingdates.checkout).to.eql(pm.environment.get('checkOut'))",
							"})",
							"",
							"pm.test('additionalneed validation',function(){",
							"    pm.expect(jsonData.booking.additionalneeds).to.eql(pm.environment.get('additionalneed'))",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\r\n{\r\n\t\"firstname\": \"{{firstName}}\",\r\n\t\"lastname\": \"{{LastName}}\",\r\n\t\"totalprice\": {{totalprice}},\r\n\t\"depositpaid\": {{depositpaid}},\r\n\t\"bookingdates\": {\r\n    \t\"checkin\": \"{{checkIn}}\",\r\n    \t\"checkout\": \"{{checkOut}}\"\r\n\t},\r\n\t\"additionalneeds\": \"{{additionalneed}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get booking Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var status = pm.response.code;\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"\r",
							"switch (status) {\r",
							"    case 200:\r",
							"   \r",
							"        pm.test('Verify status code', function () {\r",
							"            pm.response.to.have.status(200);\r",
							"        });\r",
							"\r",
							"        pm.test(\"first name validation\", function () {\r",
							"            pm.expect(jsonData.firstname).to.eql(pm.environment.get('firstName'));\r",
							"        });\r",
							"\r",
							"        pm.test(\"last name validation\", function () {\r",
							"            pm.expect(jsonData.lastname).to.eql(pm.environment.get('LastName'));\r",
							"        });\r",
							"\r",
							"        pm.test('totalprice validation', function () {\r",
							"            console.log(jsonData.totalprice)\r",
							"            console.log(pm.environment.get('totalprice'))\r",
							"            pm.expect(jsonData.totalprice).to.eql(parseInt(pm.environment.get('totalprice')));\r",
							"        });\r",
							"\r",
							"        pm.test('depositpaid validation', function () {\r",
							"            console.log(jsonData.depositpaid.toString())\r",
							"            console.log(pm.environment.get('depositPaid'))\r",
							"            pm.expect(jsonData.depositpaid.toString()).to.eql((pm.environment.get('depositpaid')));\r",
							"        });\r",
							"\r",
							"        pm.test('checkIn validation', function () {\r",
							"            pm.expect(jsonData.bookingdates.checkin).to.eql(pm.environment.get('checkIn'));\r",
							"        });\r",
							"\r",
							"        pm.test('checkOut validation', function () {\r",
							"            pm.expect(jsonData.bookingdates.checkout).to.eql(pm.environment.get('checkOut'));\r",
							"        });\r",
							"\r",
							"        pm.test('additionalneed validation', function () {\r",
							"            pm.expect(jsonData.additionalneeds).to.eql(pm.environment.get('additionalneed'));\r",
							"        });\r",
							"         \r",
							"        break;\r",
							"\r",
							"    case 404:\r",
							"        pm.test('not found');\r",
							"        break;\r",
							"\r",
							"    case 400:\r",
							"        pm.test('bad request');\r",
							"        break;\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{aceesstoken}}",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update booking details",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token=a103a14229dd7a7"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"mimma\",\r\n    \"lastname\": \"hoque\",\r\n    \"totalprice\": 1167798,\r\n    \"depositpaid\": true,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2013-02-23\",\r\n        \"checkout\": \"2014-10-23\"\r\n    },\r\n    \"additionalneeds\": \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update particular data",
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{aceesstoken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"jubayer\"\r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "check after updating details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var status = pm.response.code;\r",
							"console.log(status);\r",
							"var jsonData= pm.response.json\r",
							"\r",
							"pm.test('first name validation')\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{aceesstoken}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete booking",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{aceesstoken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}